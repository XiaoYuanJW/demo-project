<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 版本模板 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- groupId和artifactId定义了仓库的位置 -->
    <!-- 项目的全球唯一标识符：公司或者组织的唯一标识 -->
    <groupId>com.example</groupId>
    <!-- 项目的构建标识符 -->
    <artifactId>demo</artifactId>
    <!-- 版本号 -->
    <version>0.0.1-SNAPSHOT</version>
    <!-- 项目产生的构建类型 -->
    <packaging>pom</packaging>

    <!-- 项目名称 -->
    <name>demo</name>
    <!-- 项目的详细描述 -->
    <description>Demo project for Spring Boot</description>


    <!-- 父项目坐标 -->
    <parent>
        <!-- 被继承的父项目的全球唯一标识符 -->
        <groupId>org.springframework.boot</groupId>
        <!-- 被继承的父项目的构建标识符 -->
        <artifactId>spring-boot-starter-parent</artifactId>
        <!-- 被继承的父项目版本 -->
        <version>2.7.5</version>
        <!-- 父项目的pom.xml文件的相对位置 -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 子项目模块 -->
    <modules>
        <module>demo-framework</module>
        <module>demo-portal</module>
        <module>demo-common</module>
        <module>demo-generator</module>
    </modules>

    <!-- 自定义属性 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <skipTests>true</skipTests>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <mysql-connector.version>8.0.29</mysql-connector.version>
        <mybatis-generator.version>1.4.1</mybatis-generator.version>
        <mybatis.version>3.5.10</mybatis.version>
        <mybatis-plus.version>3.4.2</mybatis-plus.version>
        <pagehelper-starter.version>1.4.5</pagehelper-starter.version>
        <pagehelper.version>5.3.2</pagehelper.version>
        <druid.version>1.2.14</druid.version>
        <hutool.version>5.8.9</hutool.version>
        <lombok.version>1.18.24</lombok.version>
        <springfox-swagger.version>3.0.0</springfox-swagger.version>
        <swagger-models.version>1.6.0</swagger-models.version>
        <swagger-annotations.version>1.6.0</swagger-annotations.version>
        <spring-data-commons.version>2.7.5</spring-data-commons.version>
        <jjwt.version>0.9.1</jjwt.version>
        <json.version>1.2.83</json.version>
        <redis.version>2.7.5</redis.version>
        <logstash-logback.version>7.2</logstash-logback.version>
        <minio.version>8.4.5</minio.version>
        <amqp.version>2.3.9.RELEASE</amqp.version>
        <jackson.version>2.11.4</jackson.version>
        <jackson-jsr-version>2.13.0</jackson-jsr-version>
        <demo-framework.version>0.0.1-SNAPSHOT</demo-framework.version>
        <demo-portal.version>0.0.1-SNAPSHOT</demo-portal.version>
        <demo-common.version>0.0.1-SNAPSHOT</demo-common.version>
        <demo-generator.version>0.0.1-SNAPSHOT</demo-generator.version>
    </properties>

    <!-- 项目依赖 -->
    <dependencies>
        <!-- Spring相关依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- Hutool -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
        </dependency>
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

    <!-- 继承自该项目的所有子项目的默认依赖信息 -->
    <dependencyManagement>
        <dependencies>
            <!-- 通用模块 -->
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>demo-common</artifactId>
                <version>${demo-common.version}</version>
            </dependency>
            <!-- 架构模块 -->
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>demo-framework</artifactId>
                <version>${demo-framework.version}</version>
            </dependency>
            <!-- 生成模块 -->
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>demo-generator</artifactId>
                <version>${demo-generator.version}</version>
            </dependency>
            <!-- 程序模块 -->
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>demo-portal</artifactId>
                <version>${demo-portal.version}</version>
            </dependency>
            <!-- Mysql数据库驱动 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
            </dependency>
            <!-- Druid连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- MyBatis -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <!--Mybatis-plus-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- MyBatis分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <!-- MyBatis分页插件starter -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-starter.version}</version>
            </dependency>
            <!-- MyBatis生成器 -->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator.version}</version>
            </dependency>
            <!--Swagger-UI API文档生产工具 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger-models.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <!-- Hutool -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!-- SpringData -->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-commons</artifactId>
                <version>${spring-data-commons.version}</version>
            </dependency>
            <!-- Json -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${json.version}</version>
            </dependency>
            <!-- JWT(Json Web Token) -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <!-- Logstash -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback.version}</version>
            </dependency>
            <!--Redis-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${redis.version}</version>
            </dependency>
            <!-- MinIO -->
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>
            <!-- Spring AMQP -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${amqp.version}</version>
            </dependency>
            <!-- Jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!--  Jackson-JSR -->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson-jsr-version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 构建项目信息 -->
    <build>
        <!-- 使用插件列表 -->
        <plugins>
            <!-- plugin元素包含描述插件所需要的信息 -->
            <plugin>
                <!-- 插件在仓库里的group ID  -->
                <groupId>org.springframework.boot</groupId>
                <!-- 插件在仓库里的artifact ID -->
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
